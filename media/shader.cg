void Vert(

							float4 position : POSITION, 
							float3 normal   : NORMAL,
							//float3 tangent   : TANGENT,
							//float3 binormal   : TEXCOORD0,
							
  
							uniform float4x4 worldviewproj, 
							uniform float4 lightPosition,
 
							out float4 oClipPos    : POSITION,
							out float4 oPos     : TEXCOORD0,
							out float3 oNorm     : TEXCOORD1,
                            out float4 oLightPos    : TEXCOORD2
                  
						 ) 
{
	oClipPos = mul(worldviewproj, position);
    oPos = position;
	oNorm = normal;
	oLightPos = lightPosition;
	
 
}


void Frag(
 
             float4 pos         : TEXCOORD0,
			 float3 norm         : TEXCOORD1,
			 float4 lightpos        : TEXCOORD2,

			 uniform float4 lightDiffuse,
             uniform float4 lightSpecular,
             uniform float exponent,
             uniform float4 ambient,
			 uniform sampler2D texture  : TEXUNIT0,
			 uniform sampler2D texture2  : TEXUNIT1,
			 uniform sampler2D texture3  : TEXUNIT2,
			 

             out float4 oColor : COLOR 
)
 
{
	
	
	
	float3 N = normalize(norm);
	
	float3 blend_weights = abs( N );
	blend_weights = (blend_weights - 0.5) * 7;  
	blend_weights = max(blend_weights, 0);
	blend_weights /= (blend_weights.x + blend_weights.y + blend_weights.z ).xxx; 
	
	
	float4 col1 = tex2D(texture,pos.xy * 0.0005);  
	float4 col2 = tex2D(texture,pos.xz * 0.0005);  
	float4 col3 = tex2D(texture,pos.yz * 0.0005);
	float4 col_scaled =  (col3.xyzw * blend_weights.xxxx + col2.xyzw * blend_weights.yyyy + col1.xyzw * blend_weights.zzzz).xxxx;
    
	col1 = tex2D(texture2,pos.xy * 0.005);  
	col2 = tex2D(texture2,pos.xz * 0.005);  
	col3 = tex2D(texture2,pos.yz * 0.005);  
	float4 col_noise = col3.xyzw * blend_weights.xxxx + col2.xyzw * blend_weights.yyyy + col1.xyzw * blend_weights.zzzz;
	
	col1 = tex2D(texture,pos.xy * 0.0006);  
	col2 = tex2D(texture,pos.xz * 0.0006);  
	col3 = tex2D(texture,pos.yz * 0.0006);  
	oColor =  col3.xyzw * blend_weights.xxxx + col2.xyzw * blend_weights.yyyy + col1.xyzw * blend_weights.zzzz;
	
	oColor = lerp( oColor , col_scaled, col_noise );
	
	//if(pos.y<-300)
	/*{
		col1 = 2.0*tex2D(texture3,pos.xy * 0.003)-1.0;  
		col2 = 2.0*tex2D(texture3,pos.xz * 0.003)-1.0;  
		col3 = 2.0*tex2D(texture3,pos.yz * 0.003)-1.0;
		float4 col_normal =  (col3.xyzw * blend_weights.xxxx + col2.xyzw * blend_weights.yyyy + col1.xyzw * blend_weights.zzzz).xxxx;
		N = normalize(N-col_normal);  
	}*/
	
	
    float3 LightDir = normalize(lightpos.xyz - (pos * lightpos.w));
    
    float NdotL = dot(LightDir, N);
    
	
	oColor *=  3000.0 * (lightDiffuse * NdotL + ambient * oColor )/ distance(pos,lightpos) ;
	
}